PROGRAM

YACC

%{
#include<stdio.h>
#include<stdlib.h>
int yylex();
int yyerror(char *s);
%}
%union{int val;}
%token<val> NUMBER
%left '+''-
'
%left '*''/'
%type <val> expr
%%
input:
expr{printf("Result=%d\n",$1);};
expr:
expr'+'expr{$$=$1+$3;}|
expr'-'expr{$$=$1-$3;}|
expr'*'expr{$$=$1*$3;}|
expr'/'expr{$$=$1/$3;}|
'('expr')' {$$=$2;}|
NUMBER {$$=$1;}
;
%%
int main(){
printf("Enter Expression:\n");
yyparse();
return 0;
}
int yyerror(char *s) {
printf("Expression is invalid\n");
return 0;
}

LEX

%{
#include "y.tab.h"
%}
%%
[\t] { }
\n {return 0;}
. {return yytext[0];}
%%
[0-9]+ {yylval.val=atoi(yytext); return NUMBER;}
OUTPUT
Enter Expression:
3+4
Result=7
